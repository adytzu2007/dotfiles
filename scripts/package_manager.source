# vim: set ft=sh:
# -*- conding: UTF-8 -*-

# package manager abstractions
# base.source must be sourced before this

declare -A packages

packages["archlinux"]="sudo pacman -S --noconfirm --needed"
packages["archlinux,emacs"]="emacs"
packages["archlinux,git"]="git"
packages["archlinux,gvim"]="gvim"
packages["archlinux,meld"]="meld"
packages["archlinux,neovim"]="neovim"
packages["archlinux,python-neovim"]="python-neovim"
packages["archlinux,python2-neovim"]="python2-neovim"
packages["archlinux,ruby"]="ruby"
packages["archlinux,tmux"]="tmux"
packages["archlinux,zsh"]="zsh"
packages["ubuntu"]="sudo apt-get -y install"
packages["ubuntu,git"]="git"
packages["ubuntu,gvim"]="vim-gnome"
packages["ubuntu,meld"]="meld"
packages["ubuntu,tmux"]="tmux"
packages["ubuntu,zsh"]="zsh"


function install_package
{
    distro=$(get_distro)
    if [[ $# -ne 1 ]]; then
        echo "Usage: $0 package"
    fi

    package=${packages["$distro,$1"]}
    if [[ -n $package ]]; then
        debug_print "Installing package ${package}"
        eval "${packages[$distro]} ${package}"
    else
        debug_print "Don't know how to install package"
        echo "Please provide the command for installing $1."
        read -p "Command (empty string to skip):" command
        if [[ -n ${command} ]]; then
            eval ${command}
            return 0
        fi

        return 1
    fi

    return 0
}


