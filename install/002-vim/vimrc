"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Vi Improved configuration
" @author Adrian Bacircea
"
" Inspired from
" - ddvlad
" - Alexandru Mosoi
" - Cosmin Ratiu
" - alexj
" - Bee
" - amix@amix.dk (amix the lucky stiff)
"   amix.dk/vim/vimrc.html
" - michaeljsmalley - https://github.com/michaeljsmalley
" - Jose Elena Campana - https://github/jelera
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Plugins
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
if &compatible
    set nocompatible               " Be iMproved
endif

" Required:
set runtimepath+=~/.vim/dein/repos/github.com/Shougo/dein.vim

" Required:
if dein#load_state('~/.vim/dein')
    call dein#begin('~/.vim/dein')

    " Let dein manage dein
    " Required:
    call dein#add('~/.dein/repos/github.com/Shougo/dein.vim')

    call dein#add('ap/vim-buftabline')

    " Theme
    call dein#add('morhetz/gruvbox')

    call dein#add('itchyny/lightline.vim')

    " Required:
    call dein#end()
    call dein#save_state()
endif

" Required:
filetype plugin indent on
syntax enable


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" General
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Automatically use the current file's directory as the working directory
set autochdir

" Prevent 'Hit ENTER to continue message'
set cmdheight=2
set shortmess=atToOI

" Directories for backup and swap
set backupdir=/tmp
set directory=/tmp

" More tabs
set tabpagemax=20

set undofile " Enable persistent undo
set undodir=. " Store undo buffer with edited files
set undolevels=1000  " Maximum number of changes that can be undoed
set undoreload=100000 " Maximum number of lines to store to undo a file reload

" Disable sounds
set noerrorbells
set novisualbell
set t_vb=
set tm=500

" Disable mouse support
set mouse=""

" Hide buffer instead of closing it when another file is opened
set hidden

" Activate enhanced command completion
set wildmenu
set wildmode=full

" Set command line history
set history=50
set showcmd

" Encoding
set encoding=utf-8
set termencoding=utf-8

" Enable local vim configuration files
set exrc
set secure


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Events
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Turn file type detection on
filetype plugin on
filetype plugin indent on

autocmd BufRead,BufNewFile *.g set filetype=antlr3
autocmd BufRead,BufNewFile *.sc set filetype=python
autocmd BufRead,BufNewFile *
  \ if getline(1) =~ '^# A Perforce \(.*\) Specification.$' |
  \   :set filetype=perforce |
  \ endif
autocmd BufRead,BufNewFile *
  \ if getline(2) =~ '^Change:\t' |
  \   :set filetype=perforce |
  \ endif

autocmd FileType text setlocal textwidth=78
autocmd FileType perforce setlocal textwidth=78

" we don't want tabs to expand to spaces for certain files
autocmd FileType make setlocal noexpandtab
autocmd FileType haskell setlocal noexpandtab
autocmd FileType perforce setlocal noexpandtab


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Theme/Colors/UI
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Turn syntax highlighting on

if has('termguicolors')
    set termguicolors
endif

colorscheme gruvbox
set background=dark
let g:lightline = {
    \ 'colorscheme': 'gruvbox',
    \ 'separator': {
        \ 'left': '', 
        \ 'right': '',
        \ },
    \ 'subseparator': {
        \ 'left': '', 
        \ 'right': '',
        \ }
    \ }

" Highlight characters that go over 80 columns
highlight OverLength ctermbg=red ctermfg=white guibg=#592929
match OverLength /\%88v.\+/

" Highlight trailing shitespace
highlight ExtraWhitespace ctermbg=red ctermfg=white guibg=#592929
call matchadd('ExtraWhitespace', '\s\+$')
call matchadd('ExtraWhitespace', '\s\+$\| \+\ze\t')
call matchadd('ExtraWhitespace', '[^\t]\zs\t\+')

" Ignore case when searching
set ignorecase
" except for searches that contain upper case characters
set smartcase

" Highlight while typing
set incsearch
" don't continue to highlight searched phrases after
set nohlsearch

set showmatch
set mat=2

" Highlight current line
set cursorline

" Show line numbers
set number

" Open new vertical splits to the right of current one.
set splitright

set ttyfast
set lazyredraw

set diffopt+=iwhite
set diffexpr=""

" Activate auto-indent
set autoindent
set smartindent
set cindent
set cinoptions=g-1

" Expand tabs to spaces
set expandtab

" Don't wrap
set nowrap
set textwidth=0
set wrapmargin=0

" Mark tabs and spaces
set list listchars=tab:»\ ,trail:·,extends:»,precedes:«


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Function definitions
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

function! VarExists(var, val)
  if exists(a:var) | return a:val | else | return '' | endif
endfunction


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" ViM Mappings
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" set map leader
let mapleader = ","
let g:mapleader = ','

" Buffers
nmap        <Leader>1   :enew<CR>
nmap        <Leader>2   :e 
" Split windows
nmap        <Leader>3   :vnew<CR>
nmap        <Leader>4   :vnew 

" Move through tabs
nnoremap    <Tab>       <C-w>w
" Move through buffers
map         <C-Left>    <ESC>:bp<CR>
map         <C-Right>   <ESC>:bn<CR>
imap        <C-Left>    <ESC><C-Left>
imap        <C-Right>   <ESC><C-Right>

" Forced save/quit
nmap        <Leader>w   :w!<CR>
nmap        <Leader>q   :q!<CR>

" Indent file
map         <Leader>i   <ESC>gg=G

" Change system includes to local includes (C/C++)
nnoremap <leader>cli :.s/#include [<"]\([^">]\+\)[">]/#include "\1"/<cr>
vnoremap cli :s/\%V#include [<"]\([^">]\+\)[">]/#include "\1"/\|'<,'>sort u<cr>

" Change local includes to a system includes (C/C++)
nnoremap <leader>csi :.s/#include [<"]\([^">]\+\)[">]/#include <\1>/<cr>
vnoremap csi :s/\%V#include [<"]\([^">]\+\)[">]/#include <\1>/\|'<,'>sort u<cr>

" Strip comments from selected lines
vnoremap sc :s/\%V\s*\/\/.*$//<cr>

