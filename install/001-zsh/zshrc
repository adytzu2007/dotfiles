# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="miloshadzic"

# disable weekly auto-update checks
DISABLE_AUTO_UPDATE="true"

# disable autosetting terminal title.
DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want red dots
# to be displayed while waiting for completion
COMPLETION_WAITING_DOTS="true"

# Which plugins would you like to load?
plugins=(history-substring-search ssh-agent emacs)
if [[ -f /etc/arch-release ]]; then
    plugins+=( archlinux )
fi

. $ZSH/oh-my-zsh.sh

# Put any proprietary or private functions/values in ~/.private,
# and this will source them
if [ -f $HOME/.private ]; then
    . $HOME/.private
fi

if [ -f $HOME/.profile ]; then
    . $HOME/.profile  # Read Mac .profile, if present.
fi

###########################################################################
#
# Aliases
#
###########################################################################

alias ipmi='ipmitool -I lanplus -U root -f ~/.racpasswd -H'
alias ssh='TERM=xterm ssh'


###########################################################################
#
# Exports
#
###########################################################################

export ABSROOT=${HOME}/work/packages/arch/abs


###########################################################################
#
# Functions
#
###########################################################################

#
# qfind - used to quickly find files that contain a string in a directory
#
qfind () {
    find . -exec grep -l $1 {} \;
    return 0
}

#
# isol - open a serial over LAN connection using IPMI
#
isol() {
    if [[ -n $1 ]]; then
        ipmitool -I lanplus -U root -f ~/.racpasswd -H $1 sol activate
    else
        echo "usage: isol <sol_ip>"
    fi
}

#
# man - adds colors for the man command
#
man() {
	env \
		LESS_TERMCAP_mb=$(printf "\e[1;31m") \
		LESS_TERMCAP_md=$(printf "\e[1;31m") \
		LESS_TERMCAP_me=$(printf "\e[0m") \
		LESS_TERMCAP_se=$(printf "\e[0m") \
		LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
		LESS_TERMCAP_ue=$(printf "\e[0m") \
		LESS_TERMCAP_us=$(printf "\e[1;32m") \
			man "$@"
}


#
# repo2sm - convert a git repository into a submodule
#
repo2sm() {
    if [[ $# -ne 1 ]]; then
        echo "Usage: $0 repo_to_convert"
    fi

    repo_dir=$1
    pushd ${repo_dir}
    repo_url=$(git remote -v | grep fetch | head -n 1 | awk '{print $2}')
    popd
    git rm -r --cached ${repo_dir}
    git submodule add ${repo_url} ${repo_dir}
}

#
# untar - untars an archive to a folder with the same name
#
untar() {
   prefix=${1%.*}
   mkdir -p ${prefix}
   tar -C ${prefix} -xf ${1}
   return 0
}


###########################################################################
#
# Dynamic hooks
#
###########################################################################

if [[ -d ${HOME}/.shellrc/zshrc.d ]]; then
    for file in ${HOME}/.shellrc/zshrc.d/*.source; do
        source ${file}
    done
 fi
